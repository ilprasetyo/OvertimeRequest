#pragma checksum "C:\Users\ASUS\Documents\GitHub\OvertimeRequest\OvertimeRequest\OvertimeRequestMVC\Views\Request\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "efe31621ad286d161e727414e669abbb32006cc8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Request_Index), @"mvc.1.0.view", @"/Views/Request/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\ASUS\Documents\GitHub\OvertimeRequest\OvertimeRequest\OvertimeRequestMVC\Views\_ViewImports.cshtml"
using OvertimeRequestMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\ASUS\Documents\GitHub\OvertimeRequest\OvertimeRequest\OvertimeRequestMVC\Views\_ViewImports.cshtml"
using OvertimeRequestMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"efe31621ad286d161e727414e669abbb32006cc8", @"/Views/Request/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1214c2936227095f969a330cb4fedbda812d7a50", @"/Views/_ViewImports.cshtml")]
    public class Views_Request_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""p-3"">
    <h4 class=""text-muted font-18 m-b-5 text-center"">Welcome</h4>
    <p class=""text-muted text-center"">Leave Request Form Empploye.</p>
    <a href=""javascript:void(0)"" class=""btn bg-transparant text-success"" data-toggle=""modal"" data-target=""#Request"">Add Request</a>
    <div class=""container-fluid mt-5"">
        <table id=""myTable"" class=""table table-striped table-bordered dataTable"" style=""width:100%"">
            <thead class=""thead-light"">
                <tr role=""row"">
                    <th>No</th>
                    <th>Id</th>
                    <th>NIK</th>
                    <th>Start Hours</th>
                    <th>End Hours</th>
                    <th>Reason</th>
");
            WriteLiteral(@"                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th>No</th>
                    <th>Id</th>
                    <th>NIK</th>
                    <th>Start Hours</th>
                    <th>End Hours</th>
                    <th>Reason</th>
");
            WriteLiteral(@"                </tr>
            </tfoot>
            <tbody></tbody>
        </table>
    </div>

    <div class=""modal fade"" id=""Request"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""addModalLabel"">Add Request</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                        <div class=""row"">
                            <div class=""col-6"">
                                <div class=""form-group"">
                                    <label for=""id"" class=""col-form-label"">NIK:</label>
                                    <input type=""text"" class=""form-control"" id=""nik"" name=""nik"">
  ");
            WriteLiteral(@"                              </div>
                                <div class=""form-group"">
                                    <label for=""name"" class=""col-form-label"">Start Hours:</label>
                                    <input type=""datetime"" class=""form-control"" id=""starthours"" name=""starthours"">
                                </div>
                                <div class=""form-group"">
                                    <label for=""name"" class=""col-form-label"">End Hours:</label>
                                    <input type=""datetime"" class=""form-control"" id=""endhours"" name=""endhours"">
                                </div>
                                <div class=""form-group"">
                                    <label for=""name"" class=""col-form-label"">Reason:</label>
                                    <textarea type=""text"" class=""form-control"" id=""reason"" name=""reason""></textarea>
                                </div>
                            </div>
                </div>
           ");
            WriteLiteral("     <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" onclick=\"SubmitRequest()\">Submit</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>var table = null;
            $(document).ready(function () {
                table = $(""#myTable"").DataTable({
                    ""filter"": true,
                    ""orderMulti"": false,
                    ""ajax"": {
                        ""url"": ""https://localhost:44323/api/Request"",
                        ""type"": ""get"",
                        ""datatype"": ""json"",
                        ""dataSrc"": ""data""
                    },
                    ""columnDefs"": [
                        {
                            ""targets"": [1],
                            ""visible"": false,

                        },
                        {
                            ""targets"": [0, 2],
                            ""searchable"": true
                        },
                        {
                            ""targets"": [3],
                            ""searchable"": false,
                            ""orderable"": false
                        },
                    ],
                    ""columns"": ");
                WriteLiteral(@"[
                        {
                            ""data"": null,
                            ""render"": function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        {
                            ""data"": 'id'
                        },
                        {
                            ""data"": 'NIK'
                        },
                        {
                            ""data"": 'startHours'
                        },
                        {
                            ""data"": 'endHours'
                        },
                        {
                            ""data"": 'Reason'
                        },
                       
                        {
                            ""data"": 'statusRequest',
                            ""render"": function (statusRequest) {
                                if (statusRequest == ""Waiting"") {
                 ");
                WriteLiteral(@"                   return ""Waiting Approve"";
                                }
                                else if (statusRequest == ""Approve by Manager"") {
                                    return ""Approved By Manager"";
                                }
                                else if (statusRequest == ""Approve by Payroll"") {
                                    return ""Approved"";
                                }
                                else {
                                    return ""Reject"";
                                }
                            }
                        }
                        //{
                        //    ""data"": 'approved'
                        //}
                    ]
                });
            });

            function Get(id) {
                console.log(id);
                $.ajax({
                    url: ""/Request/Get"",
                    data: { id: id }
                }).done((result) => {
                    console.log(result);
");
                WriteLiteral(@"                    var obj = JSON.parse(result);
                    $(""#Request"").modal(""show"");
                    $(""#id"").val(obj.data.id);
                    $(""#NIK"").val(obj.data.nik);
                    $(""#startHours"").val(obj.data.startHours);
                    $(""#endHours"").val(obj.data.endHours);
                    $(""#reason"").val(obj.data.reason);
                    $(""#statusRequest"").val(obj.data.statusRequest);
                    //$(""#ApprovedHRD"").val(obj.data.approvedHRD);
                    //$(""#ApprovedManager"").val(obj.data.approvedManager);
                }).fail((error) => {
                    console.log(error);
                })
            }
            function SubmitRequest() {
                console.log(""ok"");
                var Request = new Object();
                Request.nik = $('#nik').val();
                Request.startHours = $('#startHours').val();
                Request.endHours = $('#endHours').val();
                Request.reason = $('#reason').va");
                WriteLiteral(@"l();
                $.ajax({
                    url: ""https://localhost:44323/api/Request/RequestEmployee"",
                    type: ""POST"",
                    data: Request
                }).done((result) => {
                    if (result == 200) {
                        swal('Success', 'Request Has Been Added, Cek Your Email', 'success');
                        $('#Request').modal('hide');
                        $(""#nik"").val(null);
                        $(""#id"").val(null);
                        $(""#startHours"").val(null);
                        $(""#endHours"").val(null);
                        $(""#reason"").val(null);
                        $(""#statusRequest"").val(null);
                        //$(""#ApprovedHRD"").val(null);
                        //$(""#ApprovedManager"").val(null);
                        table.ajax.reload();
                    }
                    else {
                        swal('Error', 'Something Went Wrong', 'error');
                    }
                }).fail(");
                WriteLiteral("(error) => {\n                    console.log(error)\n                });\n            }</script>\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
